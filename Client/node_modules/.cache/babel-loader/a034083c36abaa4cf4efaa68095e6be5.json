{"ast":null,"code":"import _defineProperty from \"/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/src/components/pages/Home.jsx\";\nimport React, { useState } from 'react';\nimport api from '../../api';\nexport default function Home(props) {\n  var _useState = useState({\n    country: '',\n    countryOfWork: '',\n    firstName: '',\n    lastName: '',\n    holidayAllowance: ' '\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function handleInputChange(event) {\n    console.log('entrooooo');\n    setState(_objectSpread({}, state, _defineProperty({}, event.target.name, event.target.value)));\n  }\n\n  var countryList = [{\n    name: 'Afghanistan',\n    code: 'AF'\n  }, {\n    name: 'Spain',\n    code: 'ES'\n  }, {\n    name: 'Ghana',\n    code: 'GH'\n  }, {\n    name: 'Brazil',\n    code: 'BR'\n  }, {\n    name: 'Albania',\n    code: 'AL'\n  }, {\n    name: 'Algeria',\n    code: 'DZ'\n  }, {\n    name: 'American Samoa',\n    code: 'AS'\n  }, {\n    name: 'AndorrA',\n    code: 'AD'\n  }, {\n    name: 'Angola',\n    code: 'AO'\n  }, {\n    name: 'Anguilla',\n    code: 'AI'\n  }, {\n    name: 'Antarctica',\n    code: 'AQ'\n  }, {\n    name: 'Antigua and Barbuda',\n    code: 'AG'\n  }, {\n    name: 'Argentina',\n    code: 'AR'\n  }, {\n    name: 'Armenia',\n    code: 'AM'\n  }, {\n    name: 'Aruba',\n    code: 'AW'\n  }, {\n    name: 'Australia',\n    code: 'AU'\n  }, {\n    name: 'Austria',\n    code: 'AT'\n  }, {\n    name: 'Azerbaijan',\n    code: 'AZ'\n  }, {\n    name: 'Bahamas',\n    code: 'BS'\n  }, {\n    name: 'Bahrain',\n    code: 'BH'\n  }, {\n    name: 'Bangladesh',\n    code: 'BD'\n  }, {\n    name: 'Barbados',\n    code: 'BB'\n  }, {\n    name: 'Belarus',\n    code: 'BY'\n  }, {\n    name: 'Belgium',\n    code: 'BE'\n  }, {\n    name: 'Belize',\n    code: 'BZ'\n  }, {\n    name: 'Benin',\n    code: 'BJ'\n  }, {\n    name: 'Bermuda',\n    code: 'BM'\n  }, {\n    name: 'Bhutan',\n    code: 'BT'\n  }, {\n    name: 'Bolivia',\n    code: 'BO'\n  }, {\n    name: 'Bosnia and Herzegovina',\n    code: 'BA'\n  }, {\n    name: 'Botswana',\n    code: 'BW'\n  }, {\n    name: 'Bouvet Island',\n    code: 'BV'\n  }, {\n    name: 'British Indian Ocean Territory',\n    code: 'IO'\n  }, {\n    name: 'Brunei Darussalam',\n    code: 'BN'\n  }, {\n    name: 'Bulgaria',\n    code: 'BG'\n  }, {\n    name: 'Burkina Faso',\n    code: 'BF'\n  }, {\n    name: 'Burundi',\n    code: 'BI'\n  }, {\n    name: 'Cambodia',\n    code: 'KH'\n  }, {\n    name: 'Cameroon',\n    code: 'CM'\n  }, {\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    name: 'Cape Verde',\n    code: 'CV'\n  }, {\n    name: 'Cayman Islands',\n    code: 'KY'\n  }, {\n    name: 'Central African Republic',\n    code: 'CF'\n  }, {\n    name: 'Chad',\n    code: 'TD'\n  }, {\n    name: 'Chile',\n    code: 'CL'\n  }, {\n    name: 'China',\n    code: 'CN'\n  }, {\n    name: 'Christmas Island',\n    code: 'CX'\n  }, {\n    name: 'Cocos (Keeling) Islands',\n    code: 'CC'\n  }, {\n    name: 'Colombia',\n    code: 'CO'\n  }, {\n    name: 'Comoros',\n    code: 'KM'\n  }, {\n    name: 'Congo',\n    code: 'CG'\n  }, {\n    name: 'Congo, The Democratic Republic of the',\n    code: 'CD'\n  }, {\n    name: 'Cook Islands',\n    code: 'CK'\n  }, {\n    name: 'Costa Rica',\n    code: 'CR'\n  }, {\n    name: 'Cote D\\'Ivoire',\n    code: 'CI'\n  }, {\n    name: 'Croatia',\n    code: 'HR'\n  }, {\n    name: 'Cuba',\n    code: 'CU'\n  }, {\n    name: 'Cyprus',\n    code: 'CY'\n  }, {\n    name: 'Czech Republic',\n    code: 'CZ'\n  }, {\n    name: 'Denmark',\n    code: 'DK'\n  }, {\n    name: 'Djibouti',\n    code: 'DJ'\n  }, {\n    name: 'Dominica',\n    code: 'DM'\n  }, {\n    name: 'Dominican Republic',\n    code: 'DO'\n  }, {\n    name: 'Ecuador',\n    code: 'EC'\n  }, {\n    name: 'Egypt',\n    code: 'EG'\n  }, {\n    name: 'El Salvador',\n    code: 'SV'\n  }, {\n    name: 'Equatorial Guinea',\n    code: 'GQ'\n  }, {\n    name: 'Eritrea',\n    code: 'ER'\n  }, {\n    name: 'Estonia',\n    code: 'EE'\n  }, {\n    name: 'Ethiopia',\n    code: 'ET'\n  }, {\n    name: 'Falkland Islands (Malvinas)',\n    code: 'FK'\n  }, {\n    name: 'Faroe Islands',\n    code: 'FO'\n  }, {\n    name: 'Fiji',\n    code: 'FJ'\n  }, {\n    name: 'Finland',\n    code: 'FI'\n  }, {\n    name: 'France',\n    code: 'FR'\n  }, {\n    name: 'French Guiana',\n    code: 'GF'\n  }, {\n    name: 'French Polynesia',\n    code: 'PF'\n  }, {\n    name: 'French Southern Territories',\n    code: 'TF'\n  }, {\n    name: 'Gabon',\n    code: 'GA'\n  }, {\n    name: 'Gambia',\n    code: 'GM'\n  }, {\n    name: 'Georgia',\n    code: 'GE'\n  }, {\n    name: 'Germany',\n    code: 'DE'\n  }, {\n    name: 'Gibraltar',\n    code: 'GI'\n  }, {\n    name: 'Greece',\n    code: 'GR'\n  }, {\n    name: 'Greenland',\n    code: 'GL'\n  }, {\n    name: 'Grenada',\n    code: 'GD'\n  }, {\n    name: 'Guadeloupe',\n    code: 'GP'\n  }, {\n    name: 'Guam',\n    code: 'GU'\n  }, {\n    name: 'Guatemala',\n    code: 'GT'\n  }, {\n    name: 'Guernsey',\n    code: 'GG'\n  }, {\n    name: 'Guinea',\n    code: 'GN'\n  }, {\n    name: 'Guinea-Bissau',\n    code: 'GW'\n  }, {\n    name: 'Guyana',\n    code: 'GY'\n  }, {\n    name: 'Haiti',\n    code: 'HT'\n  }, {\n    name: 'Heard Island and Mcdonald Islands',\n    code: 'HM'\n  }, {\n    name: 'Holy See (Vatican City State)',\n    code: 'VA'\n  }, {\n    name: 'Honduras',\n    code: 'HN'\n  }, {\n    name: 'Hong Kong',\n    code: 'HK'\n  }, {\n    name: 'Hungary',\n    code: 'HU'\n  }, {\n    name: 'Iceland',\n    code: 'IS'\n  }, {\n    name: 'India',\n    code: 'IN'\n  }, {\n    name: 'Indonesia',\n    code: 'ID'\n  }, {\n    name: 'Iran, Islamic Republic Of',\n    code: 'IR'\n  }, {\n    name: 'Iraq',\n    code: 'IQ'\n  }, {\n    name: 'Ireland',\n    code: 'IE'\n  }, {\n    name: 'Isle of Man',\n    code: 'IM'\n  }, {\n    name: 'Israel',\n    code: 'IL'\n  }, {\n    name: 'Italy',\n    code: 'IT'\n  }, {\n    name: 'Jamaica',\n    code: 'JM'\n  }, {\n    name: 'Japan',\n    code: 'JP'\n  }, {\n    name: 'Jersey',\n    code: 'JE'\n  }, {\n    name: 'Jordan',\n    code: 'JO'\n  }, {\n    name: 'Kazakhstan',\n    code: 'KZ'\n  }, {\n    name: 'Kenya',\n    code: 'KE'\n  }, {\n    name: 'Kiribati',\n    code: 'KI'\n  }, {\n    name: 'Korea, Democratic People\\'S Republic of',\n    code: 'KP'\n  }, {\n    name: 'Korea, Republic of',\n    code: 'KR'\n  }, {\n    name: 'Kuwait',\n    code: 'KW'\n  }, {\n    name: 'Kyrgyzstan',\n    code: 'KG'\n  }, {\n    name: 'Lao People\\'S Democratic Republic',\n    code: 'LA'\n  }, {\n    name: 'Latvia',\n    code: 'LV'\n  }, {\n    name: 'Lebanon',\n    code: 'LB'\n  }, {\n    name: 'Lesotho',\n    code: 'LS'\n  }, {\n    name: 'Liberia',\n    code: 'LR'\n  }, {\n    name: 'Libyan Arab Jamahiriya',\n    code: 'LY'\n  }, {\n    name: 'Liechtenstein',\n    code: 'LI'\n  }, {\n    name: 'Lithuania',\n    code: 'LT'\n  }, {\n    name: 'Luxembourg',\n    code: 'LU'\n  }, {\n    name: 'Macao',\n    code: 'MO'\n  }, {\n    name: 'Macedonia, The Former Yugoslav Republic of',\n    code: 'MK'\n  }, {\n    name: 'Madagascar',\n    code: 'MG'\n  }, {\n    name: 'Malawi',\n    code: 'MW'\n  }, {\n    name: 'Malaysia',\n    code: 'MY'\n  }, {\n    name: 'Maldives',\n    code: 'MV'\n  }, {\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    name: 'Malta',\n    code: 'MT'\n  }, {\n    name: 'Marshall Islands',\n    code: 'MH'\n  }, {\n    name: 'Martinique',\n    code: 'MQ'\n  }, {\n    name: 'Mauritania',\n    code: 'MR'\n  }, {\n    name: 'Mauritius',\n    code: 'MU'\n  }, {\n    name: 'Mayotte',\n    code: 'YT'\n  }, {\n    name: 'Mexico',\n    code: 'MX'\n  }, {\n    name: 'Micronesia, Federated States of',\n    code: 'FM'\n  }, {\n    name: 'Moldova, Republic of',\n    code: 'MD'\n  }, {\n    name: 'Monaco',\n    code: 'MC'\n  }, {\n    name: 'Mongolia',\n    code: 'MN'\n  }, {\n    name: 'Montserrat',\n    code: 'MS'\n  }, {\n    name: 'Morocco',\n    code: 'MA'\n  }, {\n    name: 'Mozambique',\n    code: 'MZ'\n  }, {\n    name: 'Myanmar',\n    code: 'MM'\n  }, {\n    name: 'Namibia',\n    code: 'NA'\n  }, {\n    name: 'Nauru',\n    code: 'NR'\n  }, {\n    name: 'Nepal',\n    code: 'NP'\n  }, {\n    name: 'Netherlands',\n    code: 'NL'\n  }, {\n    name: 'Netherlands Antilles',\n    code: 'AN'\n  }, {\n    name: 'New Caledonia',\n    code: 'NC'\n  }, {\n    name: 'New Zealand',\n    code: 'NZ'\n  }, {\n    name: 'Nicaragua',\n    code: 'NI'\n  }, {\n    name: 'Niger',\n    code: 'NE'\n  }, {\n    name: 'Nigeria',\n    code: 'NG'\n  }, {\n    name: 'Niue',\n    code: 'NU'\n  }, {\n    name: 'Norfolk Island',\n    code: 'NF'\n  }, {\n    name: 'Northern Mariana Islands',\n    code: 'MP'\n  }, {\n    name: 'Norway',\n    code: 'NO'\n  }, {\n    name: 'Oman',\n    code: 'OM'\n  }, {\n    name: 'Pakistan',\n    code: 'PK'\n  }, {\n    name: 'Palau',\n    code: 'PW'\n  }, {\n    name: 'Palestinian Territory, Occupied',\n    code: 'PS'\n  }, {\n    name: 'Panama',\n    code: 'PA'\n  }, {\n    name: 'Papua New Guinea',\n    code: 'PG'\n  }, {\n    name: 'Paraguay',\n    code: 'PY'\n  }, {\n    name: 'Peru',\n    code: 'PE'\n  }, {\n    name: 'Philippines',\n    code: 'PH'\n  }, {\n    name: 'Pitcairn',\n    code: 'PN'\n  }, {\n    name: 'Poland',\n    code: 'PL'\n  }, {\n    name: 'Portugal',\n    code: 'PT'\n  }, {\n    name: 'Puerto Rico',\n    code: 'PR'\n  }, {\n    name: 'Qatar',\n    code: 'QA'\n  }, {\n    name: 'Reunion',\n    code: 'RE'\n  }, {\n    name: 'Romania',\n    code: 'RO'\n  }, {\n    name: 'Russian Federation',\n    code: 'RU'\n  }, {\n    name: 'RWANDA',\n    code: 'RW'\n  }, {\n    name: 'Saint Helena',\n    code: 'SH'\n  }, {\n    name: 'Saint Kitts and Nevis',\n    code: 'KN'\n  }, {\n    name: 'Saint Lucia',\n    code: 'LC'\n  }, {\n    name: 'Saint Pierre and Miquelon',\n    code: 'PM'\n  }, {\n    name: 'Saint Vincent and the Grenadines',\n    code: 'VC'\n  }, {\n    name: 'Samoa',\n    code: 'WS'\n  }, {\n    name: 'San Marino',\n    code: 'SM'\n  }, {\n    name: 'Sao Tome and Principe',\n    code: 'ST'\n  }, {\n    name: 'Saudi Arabia',\n    code: 'SA'\n  }, {\n    name: 'Senegal',\n    code: 'SN'\n  }, {\n    name: 'Serbia and Montenegro',\n    code: 'CS'\n  }, {\n    name: 'Seychelles',\n    code: 'SC'\n  }, {\n    name: 'Sierra Leone',\n    code: 'SL'\n  }, {\n    name: 'Singapore',\n    code: 'SG'\n  }, {\n    name: 'Slovakia',\n    code: 'SK'\n  }, {\n    name: 'Slovenia',\n    code: 'SI'\n  }, {\n    name: 'Solomon Islands',\n    code: 'SB'\n  }, {\n    name: 'Somalia',\n    code: 'SO'\n  }, {\n    name: 'South Africa',\n    code: 'ZA'\n  }, {\n    name: 'South Georgia and the South Sandwich Islands',\n    code: 'GS'\n  }, {\n    name: 'Spain',\n    code: 'ES'\n  }, {\n    name: 'Sri Lanka',\n    code: 'LK'\n  }, {\n    name: 'Sudan',\n    code: 'SD'\n  }];\n\n  function handleClick(e) {\n    e.preventDefault();\n    var data = {\n      username: state.username,\n      name: state.name,\n      password: state.password,\n      accountNumber: \"Must Submit when ehtereum wallet intergration is on\",\n      profilePictureUrl: \"www.fcebook.cmo\",\n      email: state.email,\n      pictureHashes: \"29343903\",\n      bio: state.bio,\n      dob: state.dob\n    };\n    api.signup(data).then(function (result) {\n      console.log('SUCCESS!');\n      props.history.push('/'); // Redirect to the home page\n    }).catch(function (err) {\n      return setState({\n        message: err.toString()\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Employeee Home\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"countrySelect\",\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Please choose your country\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-select\",\n    \"aria-label\": \"Default select example\",\n    name: \"country\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, countryList.map(function (country) {\n    return React.createElement(\"option\", {\n      value: country.name,\n      name: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, country.name);\n  })), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"countryOfWork\",\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Country Of Work :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"countryOfWork\",\n    \"aria-describedby\": \"countryOfWork\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"firstName\",\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"First Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: state.firstName,\n    name: \"firstName\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"countryOfWork\",\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"Country Of Work :\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"countryOfWork\",\n    \"aria-describedby\": \"countryOfWork\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"exampleInputPassword1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"mb-3 form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"exampleCheck1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"exampleCheck1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, \"Check me out\")), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/src/components/pages/Home.jsx"],"names":["React","useState","api","Home","props","country","countryOfWork","firstName","lastName","holidayAllowance","state","setState","handleInputChange","event","console","log","target","name","value","countryList","code","handleClick","e","preventDefault","data","username","password","accountNumber","profilePictureUrl","email","pictureHashes","bio","dob","signup","then","result","history","push","catch","err","message","toString","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport api from '../../api'\n\n\n\nexport default function Home(props) {\n\n  const [state, setState] = useState({\n    country: '',\n    countryOfWork: '',\n    firstName: '',\n    lastName: '',\n    holidayAllowance: ' ',\n  })\n\n  function handleInputChange(event) {\n    console.log('entrooooo')\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const countryList = [\n    { name: 'Afghanistan', code: 'AF' },\n    { name: 'Spain', code: 'ES' },\n    { name: 'Ghana', code: 'GH' },\n    { name: 'Brazil', code: 'BR' },\n    { name: 'Albania', code: 'AL' },\n    { name: 'Algeria', code: 'DZ' },\n    { name: 'American Samoa', code: 'AS' },\n    { name: 'AndorrA', code: 'AD' },\n    { name: 'Angola', code: 'AO' },\n    { name: 'Anguilla', code: 'AI' },\n    { name: 'Antarctica', code: 'AQ' },\n    { name: 'Antigua and Barbuda', code: 'AG' },\n    { name: 'Argentina', code: 'AR' },\n    { name: 'Armenia', code: 'AM' },\n    { name: 'Aruba', code: 'AW' },\n    { name: 'Australia', code: 'AU' },\n    { name: 'Austria', code: 'AT' },\n    { name: 'Azerbaijan', code: 'AZ' },\n    { name: 'Bahamas', code: 'BS' },\n    { name: 'Bahrain', code: 'BH' },\n    { name: 'Bangladesh', code: 'BD' },\n    { name: 'Barbados', code: 'BB' },\n    { name: 'Belarus', code: 'BY' },\n    { name: 'Belgium', code: 'BE' },\n    { name: 'Belize', code: 'BZ' },\n    { name: 'Benin', code: 'BJ' },\n    { name: 'Bermuda', code: 'BM' },\n    { name: 'Bhutan', code: 'BT' },\n    { name: 'Bolivia', code: 'BO' },\n    { name: 'Bosnia and Herzegovina', code: 'BA' },\n    { name: 'Botswana', code: 'BW' },\n    { name: 'Bouvet Island', code: 'BV' },\n    { name: 'British Indian Ocean Territory', code: 'IO' },\n    { name: 'Brunei Darussalam', code: 'BN' },\n    { name: 'Bulgaria', code: 'BG' },\n    { name: 'Burkina Faso', code: 'BF' },\n    { name: 'Burundi', code: 'BI' },\n    { name: 'Cambodia', code: 'KH' },\n    { name: 'Cameroon', code: 'CM' },\n    { name: 'Canada', code: 'CA' },\n    { name: 'Cape Verde', code: 'CV' },\n    { name: 'Cayman Islands', code: 'KY' },\n    { name: 'Central African Republic', code: 'CF' },\n    { name: 'Chad', code: 'TD' },\n    { name: 'Chile', code: 'CL' },\n    { name: 'China', code: 'CN' },\n    { name: 'Christmas Island', code: 'CX' },\n    { name: 'Cocos (Keeling) Islands', code: 'CC' },\n    { name: 'Colombia', code: 'CO' },\n    { name: 'Comoros', code: 'KM' },\n    { name: 'Congo', code: 'CG' },\n    { name: 'Congo, The Democratic Republic of the', code: 'CD' },\n    { name: 'Cook Islands', code: 'CK' },\n    { name: 'Costa Rica', code: 'CR' },\n    { name: 'Cote D\\'Ivoire', code: 'CI' },\n    { name: 'Croatia', code: 'HR' },\n    { name: 'Cuba', code: 'CU' },\n    { name: 'Cyprus', code: 'CY' },\n    { name: 'Czech Republic', code: 'CZ' },\n    { name: 'Denmark', code: 'DK' },\n    { name: 'Djibouti', code: 'DJ' },\n    { name: 'Dominica', code: 'DM' },\n    { name: 'Dominican Republic', code: 'DO' },\n    { name: 'Ecuador', code: 'EC' },\n    { name: 'Egypt', code: 'EG' },\n    { name: 'El Salvador', code: 'SV' },\n    { name: 'Equatorial Guinea', code: 'GQ' },\n    { name: 'Eritrea', code: 'ER' },\n    { name: 'Estonia', code: 'EE' },\n    { name: 'Ethiopia', code: 'ET' },\n    { name: 'Falkland Islands (Malvinas)', code: 'FK' },\n    { name: 'Faroe Islands', code: 'FO' },\n    { name: 'Fiji', code: 'FJ' },\n    { name: 'Finland', code: 'FI' },\n    { name: 'France', code: 'FR' },\n    { name: 'French Guiana', code: 'GF' },\n    { name: 'French Polynesia', code: 'PF' },\n    { name: 'French Southern Territories', code: 'TF' },\n    { name: 'Gabon', code: 'GA' },\n    { name: 'Gambia', code: 'GM' },\n    { name: 'Georgia', code: 'GE' },\n    { name: 'Germany', code: 'DE' },\n    { name: 'Gibraltar', code: 'GI' },\n    { name: 'Greece', code: 'GR' },\n    { name: 'Greenland', code: 'GL' },\n    { name: 'Grenada', code: 'GD' },\n    { name: 'Guadeloupe', code: 'GP' },\n    { name: 'Guam', code: 'GU' },\n    { name: 'Guatemala', code: 'GT' },\n    { name: 'Guernsey', code: 'GG' },\n    { name: 'Guinea', code: 'GN' },\n    { name: 'Guinea-Bissau', code: 'GW' },\n    { name: 'Guyana', code: 'GY' },\n    { name: 'Haiti', code: 'HT' },\n    { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\n    { name: 'Holy See (Vatican City State)', code: 'VA' },\n    { name: 'Honduras', code: 'HN' },\n    { name: 'Hong Kong', code: 'HK' },\n    { name: 'Hungary', code: 'HU' },\n    { name: 'Iceland', code: 'IS' },\n    { name: 'India', code: 'IN' },\n    { name: 'Indonesia', code: 'ID' },\n    { name: 'Iran, Islamic Republic Of', code: 'IR' },\n    { name: 'Iraq', code: 'IQ' },\n    { name: 'Ireland', code: 'IE' },\n    { name: 'Isle of Man', code: 'IM' },\n    { name: 'Israel', code: 'IL' },\n    { name: 'Italy', code: 'IT' },\n    { name: 'Jamaica', code: 'JM' },\n    { name: 'Japan', code: 'JP' },\n    { name: 'Jersey', code: 'JE' },\n    { name: 'Jordan', code: 'JO' },\n    { name: 'Kazakhstan', code: 'KZ' },\n    { name: 'Kenya', code: 'KE' },\n    { name: 'Kiribati', code: 'KI' },\n    { name: 'Korea, Democratic People\\'S Republic of', code: 'KP' },\n    { name: 'Korea, Republic of', code: 'KR' },\n    { name: 'Kuwait', code: 'KW' },\n    { name: 'Kyrgyzstan', code: 'KG' },\n    { name: 'Lao People\\'S Democratic Republic', code: 'LA' },\n    { name: 'Latvia', code: 'LV' },\n    { name: 'Lebanon', code: 'LB' },\n    { name: 'Lesotho', code: 'LS' },\n    { name: 'Liberia', code: 'LR' },\n    { name: 'Libyan Arab Jamahiriya', code: 'LY' },\n    { name: 'Liechtenstein', code: 'LI' },\n    { name: 'Lithuania', code: 'LT' },\n    { name: 'Luxembourg', code: 'LU' },\n    { name: 'Macao', code: 'MO' },\n    { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\n    { name: 'Madagascar', code: 'MG' },\n    { name: 'Malawi', code: 'MW' },\n    { name: 'Malaysia', code: 'MY' },\n    { name: 'Maldives', code: 'MV' },\n    { name: 'Mali', code: 'ML' },\n    { name: 'Malta', code: 'MT' },\n    { name: 'Marshall Islands', code: 'MH' },\n    { name: 'Martinique', code: 'MQ' },\n    { name: 'Mauritania', code: 'MR' },\n    { name: 'Mauritius', code: 'MU' },\n    { name: 'Mayotte', code: 'YT' },\n    { name: 'Mexico', code: 'MX' },\n    { name: 'Micronesia, Federated States of', code: 'FM' },\n    { name: 'Moldova, Republic of', code: 'MD' },\n    { name: 'Monaco', code: 'MC' },\n    { name: 'Mongolia', code: 'MN' },\n    { name: 'Montserrat', code: 'MS' },\n    { name: 'Morocco', code: 'MA' },\n    { name: 'Mozambique', code: 'MZ' },\n    { name: 'Myanmar', code: 'MM' },\n    { name: 'Namibia', code: 'NA' },\n    { name: 'Nauru', code: 'NR' },\n    { name: 'Nepal', code: 'NP' },\n    { name: 'Netherlands', code: 'NL' },\n    { name: 'Netherlands Antilles', code: 'AN' },\n    { name: 'New Caledonia', code: 'NC' },\n    { name: 'New Zealand', code: 'NZ' },\n    { name: 'Nicaragua', code: 'NI' },\n    { name: 'Niger', code: 'NE' },\n    { name: 'Nigeria', code: 'NG' },\n    { name: 'Niue', code: 'NU' },\n    { name: 'Norfolk Island', code: 'NF' },\n    { name: 'Northern Mariana Islands', code: 'MP' },\n    { name: 'Norway', code: 'NO' },\n    { name: 'Oman', code: 'OM' },\n    { name: 'Pakistan', code: 'PK' },\n    { name: 'Palau', code: 'PW' },\n    { name: 'Palestinian Territory, Occupied', code: 'PS' },\n    { name: 'Panama', code: 'PA' },\n    { name: 'Papua New Guinea', code: 'PG' },\n    { name: 'Paraguay', code: 'PY' },\n    { name: 'Peru', code: 'PE' },\n    { name: 'Philippines', code: 'PH' },\n    { name: 'Pitcairn', code: 'PN' },\n    { name: 'Poland', code: 'PL' },\n    { name: 'Portugal', code: 'PT' },\n    { name: 'Puerto Rico', code: 'PR' },\n    { name: 'Qatar', code: 'QA' },\n    { name: 'Reunion', code: 'RE' },\n    { name: 'Romania', code: 'RO' },\n    { name: 'Russian Federation', code: 'RU' },\n    { name: 'RWANDA', code: 'RW' },\n    { name: 'Saint Helena', code: 'SH' },\n    { name: 'Saint Kitts and Nevis', code: 'KN' },\n    { name: 'Saint Lucia', code: 'LC' },\n    { name: 'Saint Pierre and Miquelon', code: 'PM' },\n    { name: 'Saint Vincent and the Grenadines', code: 'VC' },\n    { name: 'Samoa', code: 'WS' },\n    { name: 'San Marino', code: 'SM' },\n    { name: 'Sao Tome and Principe', code: 'ST' },\n    { name: 'Saudi Arabia', code: 'SA' },\n    { name: 'Senegal', code: 'SN' },\n    { name: 'Serbia and Montenegro', code: 'CS' },\n    { name: 'Seychelles', code: 'SC' },\n    { name: 'Sierra Leone', code: 'SL' },\n    { name: 'Singapore', code: 'SG' },\n    { name: 'Slovakia', code: 'SK' },\n    { name: 'Slovenia', code: 'SI' },\n    { name: 'Solomon Islands', code: 'SB' },\n    { name: 'Somalia', code: 'SO' },\n    { name: 'South Africa', code: 'ZA' },\n    { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\n    { name: 'Spain', code: 'ES' },\n    { name: 'Sri Lanka', code: 'LK' },\n    { name: 'Sudan', code: 'SD' },\n  ]\n\n  function handleClick(e) {\n    e.preventDefault()\n    let data = {\n      username: state.username,\n      name: state.name,\n      password: state.password,\n      accountNumber: \"Must Submit when ehtereum wallet intergration is on\",\n      profilePictureUrl: \"www.fcebook.cmo\",\n      email: state.email,\n      pictureHashes: \"29343903\",\n      bio: state.bio,\n      dob: state.dob\n    }\n    api\n      .signup(data)\n      .then(result => {\n        console.log('SUCCESS!')\n        props.history.push('/') // Redirect to the home page\n      })\n      .catch(err => setState({ message: err.toString() }))\n  }\n\n\n\n  return (\n    <div className=\"Home\">\n      <h1>Employeee Home</h1>\n      <div className=\"container\">\n        <label for=\"countrySelect\" className=\"form-label\">Please choose your country</label>\n        <form>\n          <select className=\"form-select\" aria-label=\"Default select example\" name=\"country\" onChange={handleInputChange}>\n            {countryList.map(country => {\n              return (\n                <option value={country.name} name={country.name}  >{country.name}</option>\n              )\n\n            })}\n\n\n          </select>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n            <label for=\"countryOfWork\" className=\"form-label\">Country Of Work :</label>\n            <input type=\"text\" className=\"form-control\" id=\"countryOfWork\" aria-describedby=\"countryOfWork\" />\n            </div>\n            <div className=\"col-md-6\">\n            <label for=\"firstName\" className=\"form-label\">First Name:</label>\n            <input\n            type=\"text\"\n            value={state.firstName}\n            name=\"firstName\"\n            onChange={handleInputChange}\n          />\n            {/* <input type=\"text\" className=\"form-control\" id=\"firstName\" aria-describedby=\"countryOfWork\" /> */}\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label for=\"countryOfWork\" className=\"form-label\">Country Of Work :</label>\n            <input type=\"text\" className=\"form-control\" id=\"countryOfWork\" aria-describedby=\"countryOfWork\" />\n            {/* <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div> */}\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n            <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\n          </div>\n          <div class=\"mb-3 form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\n            <label className=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}