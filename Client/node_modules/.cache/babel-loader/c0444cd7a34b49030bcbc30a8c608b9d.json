{"ast":null,"code":"import axios from 'axios';\nconsole.log(process.env.NODE_ENV);\nvar service = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : \"http://\".concat(window.location.hostname, \":5000/api\"),\n  withCredentials: true\n});\n\nvar errHandler = function errHandler(err) {\n  console.error(err);\n\n  if (err.response && err.response.data) {\n    console.error('API response', err.response.data);\n    throw err.response.data.message;\n  }\n\n  throw err;\n};\n\nexport default {\n  service: service,\n  // This method signs up and logs in the user\n  signup: function signup(userInfo) {\n    return service.post('/employee', userInfo).then(function (res) {\n      // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n      localStorage.setItem('user', JSON.stringify(res.data));\n      return res.data;\n    }).catch(errHandler);\n  },\n  getSecret: function getSecret() {\n    return service.get('/secret').then(function (res) {\n      return res.data;\n    }).catch(errHandler);\n  }\n};","map":{"version":3,"sources":["/Users/eddieruiz/Desktop/AInomads/newTest/fullStackAssesment/Client/src/api.js"],"names":["axios","console","log","process","env","NODE_ENV","service","create","baseURL","window","location","hostname","withCredentials","errHandler","err","error","response","data","message","signup","userInfo","post","then","res","localStorage","setItem","JSON","stringify","catch","getSecret","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB;AAEA,IAAMC,OAAO,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EACLL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI,MADJ,oBAEcI,MAAM,CAACC,QAAP,CAAgBC,QAF9B,cAFyB;AAM3BC,EAAAA,eAAe,EAAE;AANU,CAAb,CAAhB;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG,EAAI;AACxBb,EAAAA,OAAO,CAACc,KAAR,CAAcD,GAAd;;AACA,MAAIA,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaC,IAAjC,EAAuC;AACrChB,IAAAA,OAAO,CAACc,KAAR,CAAc,cAAd,EAA8BD,GAAG,CAACE,QAAJ,CAAaC,IAA3C;AACA,UAAMH,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBC,OAAxB;AACD;;AACD,QAAMJ,GAAN;AACD,CAPD;;AASA,eAAe;AACbR,EAAAA,OAAO,EAAEA,OADI;AAIb;AACAa,EAAAA,MALa,kBAKNC,QALM,EAKI;AACf,WAAOd,OAAO,CACXe,IADI,CACC,WADD,EACcD,QADd,EAEJE,IAFI,CAEC,UAAAC,GAAG,EAAI;AACX;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACN,IAAnB,CAA7B;AACA,aAAOM,GAAG,CAACN,IAAX;AACD,KANI,EAOJW,KAPI,CAOEf,UAPF,CAAP;AAQD,GAdY;AAgBbgB,EAAAA,SAhBa,uBAgBD;AACV,WAAOvB,OAAO,CACXwB,GADI,CACA,SADA,EAEJR,IAFI,CAEC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACN,IAAR;AAAA,KAFJ,EAGJW,KAHI,CAGEf,UAHF,CAAP;AAID;AArBY,CAAf","sourcesContent":["import axios from 'axios'\n\nconsole.log(process.env.NODE_ENV)\n\nconst service = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production'\n      ? '/api'\n      : `http://${window.location.hostname}:5000/api`,\n\n  withCredentials: true,\n})\n\nconst errHandler = err => {\n  console.error(err)\n  if (err.response && err.response.data) {\n    console.error('API response', err.response.data)\n    throw err.response.data.message\n  }\n  throw err\n}\n\nexport default {\n  service: service,\n\n\n  // This method signs up and logs in the user\n  signup(userInfo) {\n    return service\n      .post('/employee', userInfo)\n      .then(res => {\n        // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n        localStorage.setItem('user', JSON.stringify(res.data))\n        return res.data\n      })\n      .catch(errHandler)\n  },\n\n  getSecret() {\n    return service\n      .get('/secret')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n}\n"]},"metadata":{},"sourceType":"module"}